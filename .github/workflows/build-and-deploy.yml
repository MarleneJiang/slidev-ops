name: 构建并部署到腾讯云对象存储

on:
  workflow_dispatch:
    inputs:
      environment:
        description: '部署环境 (dev/test/prod)'
        required: false
        default: 'dev'
      version:
        description: '版本号'
        required: false
        default: 'latest'
      request_id:
        description: '请求唯一标识符'
        required: false
      title:
        description: '演示文稿标题'
        required: true
        default: 'Slidev演示文稿'
      content:
        description: '演示文稿内容'
        required: true
      author:
        description: '作者'
        required: false
        default: 'slidev-parser'
      args:
        description: '其他参数'
        required: false

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: 检出代码
        uses: actions/checkout@v3

      - name: 显示请求信息
        run: |
          echo "环境: ${{ github.event.inputs.environment }}"
          echo "版本: ${{ github.event.inputs.version }}"
          echo "请求ID: ${{ github.event.inputs.request_id }}"
          echo "标题: ${{ github.event.inputs.title }}"

      - name: 设置 Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'  # 升级到更新的Node.js版本

      - name: 设置 pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 7
          run_install: false
          
      - name: 获取 pnpm 缓存路径
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT
          
      - name: 设置 pnpm 缓存
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: 安装依赖
        run: |
          echo "构建环境: ${{ github.event.inputs.environment }}"
          echo "版本号: ${{ github.event.inputs.version }}"
          pnpm install
          pnpm i -g @slidev/cli
        env:
          NODE_ENV: ${{ github.event.inputs.environment }}
          
      - name: 处理模板文件
        run: |
          # 确保脚本运行在正确的Node环境中
          export NODE_ENV="${{ github.event.inputs.environment }}"
          node scripts/process-template.js
        env:
          ENVIRONMENT: ${{ github.event.inputs.environment }}
          VERSION: ${{ github.event.inputs.version }}
          REQUEST_ID: ${{ github.event.inputs.request_id }}
          TITLE: ${{ github.event.inputs.title }}
          CONTENT: ${{ github.event.inputs.content }}
          AUTHOR: ${{ github.event.inputs.author }}
          ARGS: ${{ github.event.inputs.args }}
          
      - name: 构建Slidev
        run: |
          # 使用request_id作为base路径
          REQUEST_ID="${{ github.event.inputs.environment }}/${{ github.event.inputs.request_id }}"
          if [ -z "$REQUEST_ID" ]; then
            REQUEST_ID="default"
          fi
          
          echo "使用base路径: /$REQUEST_ID/"
          
          # 设置正确的NODE_ENV和其他可能需要的环境变量
          export NODE_ENV="${{ github.event.inputs.environment }}"
          export NODE_OPTIONS="--max-old-space-size=4096"
          
          # 执行构建命令
          slidev build --base "/$REQUEST_ID/"
          
          # 显示构建结果
          ls -la dist
          
      - name: 部署到腾讯云对象存储
        uses: TencentCloud/cos-action@v1
        with:
          secret_id: ${{ secrets.TENCENT_CLOUD_SECRET_ID }}
          secret_key: ${{ secrets.TENCENT_CLOUD_SECRET_KEY }}
          cos_bucket: ${{ secrets.COS_BUCKET }}
          cos_region: ${{ secrets.COS_REGION }}
          local_path: 'dist' # Vite 的默认输出目录
          remote_path: '${{ github.event.inputs.environment }}/${{ github.event.inputs.request_id }}'
          clean: true # 清理目标路径中的文件
